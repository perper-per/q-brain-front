import{ao as a}from"./index-CVI_ghTT.js";import{a as n}from"./axios-DPhIjsLI.js";const l=200,d=200,c={title:"新便條",content:"",isExpanded:!0,isUrgent:!1,titleColor:"#000000",x:0,y:0,color:{light:"#ffd700",dark:"#ffa000"},width:l,height:d},f=a("note",{state:()=>({notes:[],lastZIndex:1,loading:!1,error:null,isMobileView:!1,isUpdatingPositions:!1}),getters:{orderedNotes:t=>t.isUpdatingPositions?t.notes:t.isMobileView?[...t.notes].sort((e,s)=>(e.position??Number.POSITIVE_INFINITY)-(s.position??Number.POSITIVE_INFINITY)):[...t.notes].sort((e,s)=>e.zIndex-s.zIndex),notesCount:t=>Array.isArray(t.notes)?t.notes.length:0},actions:{setMobileView(t){this.isMobileView!==t&&(this.isMobileView=t,console.log("視圖模式已更新為:",t?"移動版":"桌面版"))},async loadNotes(){this.loading=!0,this.error=null;try{const t=localStorage.getItem("token");if(!t)throw console.error("未登入或缺少令牌"),new Error("未登入");console.log("發送便條請求，令牌:",`${t.substring(0,10)}...`);const e=await n.get("/api/notes");return console.log("便條響應:",e),Array.isArray(e.data)?this.notes=e.data:e.data&&Array.isArray(e.data.result)?this.notes=e.data.result:e.data&&Array.isArray(e.data.notes)?this.notes=e.data.notes:(console.warn("無法識別便條數據格式:",e.data),this.notes=[]),console.log("便條數量:",this.notes.length),this.notes}catch(t){throw console.error("載入便條時出錯:",t),this.error=t.message||"載入便條失敗",this.notes=[],t}finally{this.loading=!1}},async addNote(t){try{const e={...c,x:t.x||50,y:t.y||50,...t,zIndex:this.lastZIndex+1};console.log("發送的便條數據:",e);const s=await n.post("/api/notes",e);return console.log("服務器響應:",s.data),this.lastZIndex+=1,this.notes.push(s.data.result),s.data.result}catch(e){throw console.error("新增便條失敗:",e.response?.data||e),e}},async updateNote(t,e){try{console.log("更新便條:",{noteId:t,updates:e});const o=(await n.patch(`/api/notes/${t}`,e)).data.result,r=this.notes.findIndex(i=>i._id===t);return r!==-1&&(this.notes[r]={...this.notes[r],...o}),o}catch(s){throw console.error("更新便條失敗:",s),s}},async deleteNote(t){try{return console.log("準備刪除便條:",t),await n.delete(`/api/notes/${t}`),this.notes=this.notes.filter(e=>e._id!==t),!0}catch(e){throw console.error("刪除便條失敗:",e),e}},async updateNoteZIndex(t){this.lastZIndex+=1;const e=this.notes.find(s=>s._id===t);if(e){e.zIndex=this.lastZIndex;try{return await this.updateNote(t,{zIndex:this.lastZIndex}),this.lastZIndex}catch(s){throw console.error("更新 z-index 失敗:",s),s}}},async createNote(t){return(await n.post("/api/notes",{title:t.title,content:t.content||"",position:t.position})).data},async updateMultipleNotes(t){if(!Array.isArray(t)||t.length===0)return[];try{const e=t.filter(o=>o&&o.id&&Object.keys(o.data).length>0);if(e.length===0)return[];if(e.length===1){const{id:o,data:r}=e[0];return[await this.updateNote(o,r)]}const s=await n.post("/api/notes/batch",{updates:e});if(s.data.results)for(const o of s.data.results){const r=this.notes.findIndex(i=>i._id===o._id);r!==-1&&(this.notes[r]={...this.notes[r],...o})}return s.data.results||[]}catch(e){throw console.error("批量更新便條失敗:",e),e}}}});export{c as d,f as u};
